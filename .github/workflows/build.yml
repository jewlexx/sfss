name: Build & Test

on:
  release:
    types: [published]

  pull_request:
    branches:
      - "trunk"

  push:
    branches:
      - "trunk"

permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always

jobs:
  clippy:
    name: Clippy
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2.7.3

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: clippy

      - name: Run Clippy
        run: cargo clippy

  format:
    name: Formatting
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2.7.3

      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt

      - name: Check Formatting
        run: cargo fmt --all -- --check

  test:
    name: Test
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2.7.3

      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build and Test
        run: cargo test

  build:
    name: Build
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2.7.3
      - uses: extractions/setup-just@v1

      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install cargo-auditable
        run: cargo install cargo-auditable

      - name: Build and Package
        run: just release

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.1.0
        with:
          name: package.zip
          path: release/*

      - name: Upload & Publish
        uses: softprops/action-gh-release@v0.1.15
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: release/*

      - name: VirusTotal Scan
        uses: crazy-max/ghaction-virustotal@v4
        if: startsWith(github.ref, 'refs/tags/')
        with:
          update_release_body: true
          vt_api_key: ${{ secrets.VT_API_KEY }}
          files: |
            dl-i686.7z
            dl-x86_64.7z
            sfsu-i686.exe
            sfsu-x86_64.exe
